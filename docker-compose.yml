version: '3.8'

services:
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: voidbank-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: voidbank
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d:ro
    networks:
      - voidbank-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Kafka
  kafka:
    image: bitnami/kafka:3.6
    container_name: voidbank-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      # KRaft mode configuration
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Additional configurations
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - voidbank-net
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s

  # VoidBank Application (Java Backend + Rust Transaction Bot)
  voidbank-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voidbank-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/voidbank
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      
      # Kafka configuration
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      
      # Java options
      JAVA_OPTS: >-
        -Xmx512m
        -Xms256m
        -Dspring.profiles.active=docker
        -Djava.security.egd=file:/dev/./urandom
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - voidbank-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s

  # Kafka UI (Optional - for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: voidbank-kafka-ui
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: voidbank-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - voidbank-net
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  kafka_data:
    driver: local

networks:
  voidbank-net:
    driver: bridge
    name: voidbank-network
